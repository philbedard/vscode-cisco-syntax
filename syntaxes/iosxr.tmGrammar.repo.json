{
  "scopeName": "text.iosxr",
  "fileTypes": [
    "xr", 
    "iosxr", 
    "cfg"
  ],
  "firstLineMatch": "^!!\\s+IOS\\s+XR.*", 
  "firstLine": "^!!\\s+IOS\\s+XR.*", 
  "foldingStartMarker": "^route-policy|^interface|^router|^ip access-list extended|^telemetry|^ptp|^segment-routing",
  "foldingStopMarker": "^!",
  "name": "cisco-iosxr",
  "patterns": [
    {
      "match": "!!a$",
      "name": "emphasis" 
    },
    {
      "match": "!!b$",
      "name": "strong" 
    },
    {
      "match": "!!c$",
      "name": "header" 
    },
    {
      "match": "!!d$",
      "name": "comment.line" 
    },
    {
      "match": "!!d$",
      "name": "comment.block" 
    },
    {
      "match": "!!e$",
      "name": "comment.documentation" 
    },
    {
      "match": "!!f$",
      "name": "constant.language" 
    },
    {
      "match": "!!g$",
      "name": "constant.character" 
    },
    {
      "match": "!!h$",
      "name": "constant.character.escape" 
    },
    {
      "match": "!!i$",
      "name": "constant.other" 
    },
    {
      "match": "!!j$",
      "name": "constant.other.attribute-name" 
    },
    {
      "match": "!!k$",
      "name": "constant.other.inherited-class" 
    },
    {
      "match": "!!l$",
      "name": "constant.numeric" 
    },
    {
      "match": "!!m$",
      "name": "constant.regexp" 
    },
    {
      "match": "!!n$",
      "name": "entity.name.tag" 
    },
    {
      "match": "!!o$",
      "name": "entity.name.function" 
    },
    {
      "match": "!!p$",
      "name": "entity.name.class" 
    },
    {
      "match": "!!q$",
      "name": "entity.name.selector" 
    },
    {
      "match": "!!r$",
      "name": "entity.other.attribute-name" 
    },
    {
      "match": "!!s$",
      "name": "invalid" 
    },
    {
      "match": "!!t$",
      "name": "invalid.illegal" 
    },
    {
      "match": "!!u$",
      "name": "invalid.deprecated" 
    },
    {
      "match": "!!v$",
      "name": "keyword" 
    },
    {
      "match": "!!w$",
      "name": "keyword.control" 
    },
    {
      "match": "!!x$",
      "name": "keyword.control.less" 
    },
    {
      "match": "!!y$",
      "name": "keyword.operator" 
    },
    {
      "match": "!!z$",
      "name": "keyword.operator.new" 
    },
    {
      "match": "\\b!!aa",
      "name": "markup.underline" 
    },
    {
      "match": "!!ab",
      "name": "markup.bold" 
    },
    {
      "match": "!!ac",
      "name": "markup.heading" 
    },
    {
      "match": "!!ae",
      "name": "markup.deleted" 
    },
    {
      "match": "!!af",
      "name": "markup.italic" 
    },
    {
      "match": "!!ag",
      "name": "markup.list.numbered" 
    },
    {
      "match": "!!ah",
      "name": "markup.list.unnumbered" 
    },
    {
      "match": "!!ai",
      "name": "markup.list.quote" 
    },
    {
      "match": "!!aj",
      "name": "markup.raw" 
    },
    {
      "match": "!!ak",
      "name": "markup.other" 
    },
    {
      "match": "!!al",
      "name": "meta" 
    },
    {
      "match": "!!am",
      "name": "meta.embedded" 
    },
    {
      "match": "!!an",
      "name": "meta.preprocesor" 
    },
    {
      "match": "!!ao",
      "name": "meta.section" 
    },
    {
      "match": "!!aq",
      "name": "string" 
    },
    {
      "match": "!!ar",
      "name": "string.tag" 
    },
    {
      "match": "!!at",
      "name": "string.value" 
    },
    {
      "match": "!!au",
      "name": "string.regexp" 
    },
    {
      "match": "!!av",
      "name": "string.source" 
    },
    {
      "match": "!!ax",
      "name": "string.quoted" 
    },
    {
      "match": "!!ay",
      "name": "string.unquoted" 
    },
    {
      "match": "!!az",
      "name": "string.interpolated" 
    },
    {
      "match": "!!ba",
      "name": "storage" 
    },
    {
      "match": "!!bb",
      "name": "storage.type" 
    },
    {
      "match": "!!bc",
      "name": "storage.modifier" 
    },
    {
      "match": "!!bd",
      "name": "support.function" 
    },
    {
      "match": "!!be",
      "name": "support.class" 
    },
    {
      "match": "!!bf",
      "name": "support.type" 
    },
    {
      "match": "!!bg",
      "name": "support.constant" 
    },
    {
      "match": "!!bh",
      "name": "support.variable" 
    },
    {
      "match": "!!bi",
      "name": "support.other" 
    },
    {
      "match": "!!bj",
      "name": "string" 
    },
    {
      "match": "!!bk",
      "name": "string.tag" 
    },
    {
      "match": "!!bl",
      "name": "string.value" 
    },
    {
      "match": "!!bm",
      "name": "string.regexp" 
    },
    {
      "match": "!!bn",
      "name": "variable" 
    },
    {
      "match": "!!bo",
      "name": "variable.parameter" 
    },
    {
      "match": "!!bp",
      "name": "variable.language" 
    },
    {
      "match": "!!bq",
      "name": "variable.other" 
    },
    {
      "match": "!!br",
      "name": "string.unquoted" 
    },
    {
      "match": "^\\s*no ",
      "name": "invalid.illegal.iosxr"
    },
    {
      "match": "^(ipv4|ipv6) access-list",
      "name": "support.function.acl.iosxr"
    },
    {
      "match": "crypto ",
      "name": "string.unquoted.iosxr"
    },
    {
      "match": "permit ",
      "name": "markup.inserted.aclpermit.iosxr"
    },
    {
      "match": "deny ",
      "name": "invalid.illegal.acldeny.iosxr"
    },
    {
      "match": "object-group",
      "name": "support.function.acl.iosxr"
    },
    {
      "match": "host",
      "name": "markup.list.iosxr"
    },
    {
      "match": "\\d+\\.\\d+\\.\\d+\\.\\d+(/\\d{1,2})?",
      "name": "constant.numeric.ipv4.iosxr"
    },
    {
      "match": "[0-9a-fA-F]{0,4}:([0-9a-fA-F]{0,4}:)+[0-9a-fA-F]{0,4}(/\\d{1,3})?",
      "name": "constant.numeric.ipv6.iosxr"
    },
    {
      "match": "\\bshutdown$",
      "name": "invalid.illegal.iosxr"
    },
    {
      "match": "(?<=\\n)(\\w|\\W)*(?=\\n)",
      "name": "invalid.illegal.inside.iosxr"
    },
    {
      "match": "(?<=\\n)[\\w\\W]*(?=\\n)",
      "name": "invalid.illegal.inside.iosxr"
    },
    {
      "match": "Configuration (\\d\\.)+\\d+[a-zA-Z]*",
      "name": "variable.version.iosxr"
    },
    {
      "match": "(?<!-)interface\\b",
      "name": "constant.language.interface.iosxr"
    },
    {
      "match": "\\bl2transport$",
      "name": "constant.character.escape.l2trans.iosxr"
    },
    {
      "match": "\\bMgmtEth.*", 
      "name": "variable.physinterface.iosxr" 
    }, 
    {
      "match": "\\bGigabitEthernet[0-9.\/-]+", 
      "name": "variable.physinterface.iosxr" 
    }, 
    {
      "match": "\\b(Ten|TwentyFive|Forty|Hundred|FourHundred)?GigE[0-9.\/-]+", 
      "name": "variable.physinterface.iosxr" 
    }, 
    {
      "match": "\\b(Loopback|Bundle-Ether|BVI)[0-9]+", 
      "name": "variable.logicalinterface.iosxr" 
    }, 
    {
      "match": "\\b(description|remark|system message)\\s.*$",
      "name": "comment.documentation.iosxr"
    },
    {
      "match": "\\bno\\b",
      "name": "constant.language.iosxr"
    },
    {
      "match": "^!!",
      "name": "comment.iosxr"
    },
    {
      "match": "Configuration",
      "name": "markup.bold.version.iosxr"
    },
    {
      "match": "\\b(ipv(4|6) address|unnumbered|speed|(full-|half-)?duplex|cdp|encapsulation|lldp|bandwidth|mtu|lacp|bfd|channel-group)\\b",
      "name": "keyword.control.interface.iosxr"
    },
    {
      "match": "^(router|multicast-routing|mpls|dot1x|igmp|mld|segment-routing).*$",
      "name": "support.type.routing.iosxr"
    },
    {
      "match": "^(username|accounting|clock|hw-module|hostname|logging|cdp|ntp|lldp|netconf-yang|grpc|frequency|gnss-receiver|key|domain|call-home|line|telemetry|bfd|control-plane|vty-pool|aaa|fpd|taskgroup|usergroup|service|hw-platform|(snmp|radius|tacacs|telnet|ssh)(-server)?)\\b",
      "name": "keyword.control.system.iosxr"
    },
    {
      "match": "(?<!-)(vrf|evpn|l2vpn|ptp|dhcp|ethernet (cfm|oam|sla))(?!-)\\b",
      "name": "constant.character.escape.services.iosxr"
    },
    {
      "match": "(extcommunity|prefix)-set|route-policy|end-policy$|end-set\\b", 
      "name": "string.regexp.sets.iosxr"
    },
    {
      "match": "\\bipv(4|6) access-group\\b",
      "name": "string.regexp.interface.iosxr"
    },
    {
      "match": "\\bservice-policy\\b",
      "name": "string.regexp.interface.iosxr"
    },
    {
      "match": "\\b((class|policy)-map|end-(policy|class)-map)\\b",
      "name": "string.qosmap.iosxr"
    },
    {
      "match": "\\bend-class-map\\b",
      "name": "keyword.other.class-map.iosxr"
    },
    {
      "match": "^([a-zA-Z]).*$", 
      "name": "strong.emphasis.startsection.iosxr"
    },
    {
      "match": "^!$", 
      "name": "constant.regexp.endsection.iosxr"
    },
    {
      "match": "!!ad",
      "name": "markup.inserted" 
    }
  ]
}
